use teloxide::{prelude::*, utils::command::BotCommands};
use std::env;

// –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
#[derive(BotCommands, Clone)]
#[command(rename_rule = "lowercase", description = "–ö–æ–º–∞–Ω–¥—ã —Ç–∞—Ç—É-—Å—Ç—É–¥–∏–∏:")]
enum Command {
    #[command(description = "–ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞")]
    Start,
    #[command(description = "–û—Ç–∫—Ä—ã—Ç—å —Å—Ç—É–¥–∏—é")]
    Studio,
}

// URL Mini App
const MINI_APP_URL: &str = "https://Jettattoo.github.io/tattoo-studio/";

#[tokio::main]
async fn main() {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
    env_logger::init();
    log::info!("üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –Ω–∞ Rust...");

    // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
    let token = env::var("TELEGRAM_BOT_TOKEN")
        .expect("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!");
    
    log::info!("üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {}", if token.len() > 10 { "–ï—Å—Ç—å" } else { "–ù–ï–¢!" });

    // –°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞
    let bot = Bot::new(&token);
    
    log::info!("ü§ñ –ë–æ—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!");

    // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    Command::repl(bot, answer).await;
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥
async fn answer(bot: Bot, msg: Message, cmd: Command) -> ResponseResult<()> {
    let chat_id = msg.chat.id;
    let user_name = msg.from()
        .and_then(|user| user.first_name.as_ref())
        .unwrap_or(&"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å".to_string());

    match cmd {
        Command::Start => {
            log::info!("üì• –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /start –æ—Ç: {}", user_name);
            
            bot.send_message(chat_id, format!("üé® –ü—Ä–∏–≤–µ—Ç, {}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ —Ç–∞—Ç—É-—Å—Ç—É–¥–∏—é!", user_name))
                .await?;
        }
        
        Command::Studio => {
            log::info!("üì• –ü–æ–ª—É—á–µ–Ω–∞ –∫–æ–º–∞–Ω–¥–∞ /studio –æ—Ç: {}", user_name);
            
            bot.send_message(chat_id, "üé® –û—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—É–¥–∏—é...")
                .await?;
        }
    }

    Ok(())
}